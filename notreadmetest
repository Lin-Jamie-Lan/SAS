/*this is SQL, not SAS*/
/* import file */
%LET location=/C:/; 
%LET file= BioEduJob.xlsx       ; /*Enter the filename */
 
 
PROC IMPORT 
     OUT= Bio
    DATAFILE= "&location.&file." 
    DBMS=xlsx REPLACE;
     Sheets=Bio;
    GETNAMES=YES;
RUN;
 
 
 
/*1. Join Bio and Education tabs together.*/
proc sql;
create table answer1 as
select 
* 
from Bio a 
Left JOIN Education b
on a.ID=b.'I.D.'n
;
 
/*2. Join the resultant dataset from above question(1) and join it with the Job such that everyone is associated with 
their most current job. Also, first you have to create a new dataset to join the two jobs dataset.*/
     /*proc sql;*/
     /*create table answer2a as*/
     /*select */
     /** */
     /*from Job a Left join 'Jobs 2'n b*/
     /*on a.Identification=b.Identification ;*/
 
proc sql;
create table answer2b as 
select 
c.ID, c.'First Name'n, d.Company, d.'Start Date'n
from answer1 c 
Left JOIN (select * 
     from Job a Left join 'Jobs 2'n b
     on a.Identification=b.Identification) d
on c.ID=d.Identification;
 
proc sql;
create table answer2c as 
select 
distinct * from answer2b
group by ID
having 'Start Date'n = max('Start Date'n)
;
 
/*put n/a to those jobless*/
proc sql;
create table answer2d as 
select 
     *  ,
     case 
           when Company is NULL then 'NA'
           else Company
     End as Company1 
 
from answer2c ; 
 
/*3. Join the first and last name into a single column called 'Name'. Meke sure to remove spaces*/
proc sql;
create table answer3 as
select 
CATX(' ','First Name'n, 'Last Name'n) as Name ,
('First Name'n || 'Last Name'n) as Name2 /*trying new way*/
 
from Bio 
;
 
/*4. Extract the year form the DOB column and name it 'Year of Birth'*/
proc sql;
create table answer4 as
select 
*, year(DOB) as 'Year of Birth'n
from Bio
;
 
/*5. Convert the height in cm to feet and inches. 
The new column ('Height in feet and Inches') should be like -> 5 ft and 4 inches*/
proc sql;
create table answer5a as
select 
     *, 
     Floor(Height*0.0328084) as Ft, 
     ((Height*0.0328084)-Floor(Height*0.0328084)) as Deci
from Bio;
 
proc sql;
create table answer5b as 
select 
     *,
     round(Deci,0.1)*10 as in 
from answer5a;
 
proc sql;
create table answer5c as
select 
     'First Name'n, Height, 
     CATX(' ', Ft, "'", in, "''") as Height2
from answer5b;
 
/*6. Create a new column to convert weight into pounds.*/
     /*same as above*/
 
/*7. Create a new column called 'Unique Ref Num' which is mde up of first digits of forst and last name, -, ddmm from DOB, 
eg for Lin Lan (ll-0111)*/
proc sql;
create table answer7a as
select 
*,
substr('First Name'n, 1,1) as F,
substr('Last Name'n, 1,1) as L,
month(DOB) as mm,
day(DOB) as dd
from Bio
;
THIS IS SQL
proc sql;
create table answer7b as 
select 
'First Name'n, 
CATX('', F, L, '-', dd, mm) as 'Unique Ref Num'n
from answer7a
;
 
/*8. Calculate age as of today for everyone. (Hint: Use Date Macro)*/
proc sql;
create table answer8a as
select 
*,
today() format MMDDYY10. as Today
from Bio
;
 
proc sql;
create table answer8b as
select 
*,
intck('Year',DOB,Today()) as Age 
/*directly put Today() numeric value will work, meaning argument 1 and 2 no need to be same data format*/
from answer8a
;
 
/*9. Convert height column into character, weight into number, salary into dollar amount and dates into format mmddyy10.*/
proc sql;
create table answer9a as
select 
*,
put(Height,3.) as H_Char
/*number to character*/
from Bio
;
                
proc sql;
create table answer9b as
select 
*,
input(H_Char,z3.) as H_Num
/*character to number*/
from answer9a
;
 
proc sql;
create table answer9c as
select 
*,
Salary format dollar10.1 as SalaryDollar 
/*salary into dollar amount*/
from Job
;
     
proc sql;
create table answer9d as
select
*,
DOB format mmddyy10. as DOB2,
DOB format date9. as DOB3
/*date into formats*/
from Bio
;
 
/*10. Create a column which tells how many times vowels(a,e,i,o,u) comes in everyone's names.*/
proc sql;
create table answer10a as
select
*,
countc('First Name'n, 'a') as CountA,
countc('First Name'n, 'e') as CountE,
countc('First Name'n, 'i') as CountI,
countc('First Name'n, 'o') as CountO,
countc('First Name'n, 'u') as CountU
from Bio
;
 
proc sql;
create table answer10b as
select 
*,
(CountA+CountE+CountI+CountO+CountU) as CountVowels
from answer10a
;
 
     /*use index, find the position of 'a' in each first name*/
     proc sql;
     create table answer10c as
     select 
     *,
     index('First Name'n, 'a') as position
     from Bio
     ;
 
 
/*11. Add 6 months to everyone's DOB and create a new column, and 6 days*/
proc sql;
create table answer11 as 
select 
     *,
     intnx('day',DOB,6) as Day_add FORMAT MMDDYY10.,
     intnx('month',DOB,6) as Month_add FORMAT MMDDYY10.
from Bio
;
 
/*12. Create a new column, Adult, where if age is above 18 and salary above 55000, then Y else N.*/
proc sql;
create table answer12a as 
select 
*,
intck('Year',a.DOB,Today()) as Age 
from Bio a Left Join Job b 
     on a.ID=b.Identification;
 
proc sql;
create table answer12b as
select 
'First Name'n, Age, Salary,
     Case 
           when Age>=18 and Salary >=55000 then 'Y'
           Else 'N'
     End as Adult
 from answer12a;
 
 /*13. Whcih person has the Max salary (do not use the max function, use if-else and retain)*/
 data answer13; 
 set answer12a end=LastOne;
 retain holdName holdSalary; /*Create placeholder*/
     if Salary>holdSalary then
           do;
               holdSalary=Salary;
               holdName='First Name'n;
           end;
     if LastOne;
 run;
 
 /*use proc sql*/
     proc sql;
     create table answer13b as 
     *
     from answer12a
     having salary=max(salary)
     ;
  
/*14.Add a row number to the dataset*/
data answer14;
rownum=_n_;
run;
  
/*15. For all those people who have jobs, what was the % increase in their salary from their previous job (use both lead and lag)*/
proc sql;
create table answer15a as
select
*
from answer12a
where Salary is not missing 
order by ID, 'Start Date'n asc; 
  
DATA answer15b;
set answer15a (drop=sex, height weight identification age);
Salary_lag=lag(Salary);
Increase_Percentage = (Salary - Salary_lag)/Salary_lag;
/*then I need to remove the first obs of each group*/
run; 

/*16. Remove the vowel column from the table (using data set)*/
/**practice with removing DOB**/
DATA answer16;
set answer15b (drop=DOB); 
run;
 
/*17. Select everyone with age between 20 and 30.*/
/*proc sql step in aniswer12, using CASE*/
 
DATA answer 17;
set answer 12a; 
If Age<20 or Age>30 then delete;
run;
 
/*18. Select everyone with 'a' as second letter in their first name*/
proc sql;
create tabkle answer18 as
select
*
from Bio
where 'First Name'n like '_a%'
;
 
/*19 select everyone which has 'ee' in their name.*/
proc sql;
create table answer19 as
select 
*
from Bio
where 'First Name'n like '%ee%'
;
 
/*20. Calculate total money earned by everyone so far*/
/*month diff*/
proc sql;
create table answer20a as
select 
*,
case
					when 'End Date'n is null then Today()
					else 'End Date'n 
					End as 'End Date2'n format MMDDYY10. /*cannot reuse the columns, must create new column*/
from answer12a
where 'Start Date'n is not missing
;
					
proc sql;
create table answer20b as
select 
'First Name'n, Company, Salary, 'Start Date'n, 'End Date2'n, 
intck('Day', 'Start Date'n, 'End Date2'n) as Duration
from answer20a
;

proc sql;
create table answer20c as
select
*,
(Duration/365*Salary) as Saving
from answer20b
;

proc sql;
create table answer20d as 
select
*, 
sum(Saving) as Sum
from answer20c
group by 'First Name'n
;

/*21. Create a new column, salary after bonus, where new salary will be 1.15 Salary. 
Select only those people whose new salary is above 70000, dollar. All this should be done in the same step (Hint: Use calculated)*/
proc sql;
create table answer21 as 
select
*,
(1.15* Salary) as SalaryAfterBonus
from answer20b
where calculated SalaryAfterBonus > 70000 /*Only after creating the column, I can reuse it, by putting "Calculated" */
;

/22. Do left, right inner, outer and cartesian join (between Bio-education and job) to see the difference in output. */
proc sql;
create table answer22a as
select
*
from Bio a left join Education b
on a.ID=b.'I.D.'n
;

proc sql;
create table answer22b as 
select 
*
from Bio a right join Job b
on a.ID=b.Identification
;

proc sql;
create table answer22c as
select 
*
 from Bio a left join Job b
	on a.ID=b.Identification
	;
	
	proc sql;
	create table answer22d as 
	select 
	*
	from Bio a inner join 'Jobs 2'n b
	on a.ID=b.Identification
	;
	
	proc sql; 
	create table answer 22e as
	select
	*
	from Bio cross join Job /*what is thisssss???*/
	;
	
	/*In a CARTESIAN JOIN there is  a join for each row of one table to every row of another table.
	This usually happens when the matching column or WHERE condition is not specified. */
	
	proc sql;
	create table answer 22f as 
	select 
		*
	from 
		bio, job;
	
	/*23. Create a pass-thru query and understand the logic. What is the difference between pass0thru and other quries ? */
	/*G's codes*/
	
/*32.Combine UN1 and UN2 using union and union all and see the difference.*/
proc sql;
create table answer32a as
select 
	*
from 
	UN1
UNION
select 
	*
from 
	UN2; /*remove duplicate*/
	
proc sql;
create table answer32b as 
select 
	*
from UNI1
UNION ALL
select 
	*
from 
	UN2; /*keep duplicate*/

/*33. 





 
